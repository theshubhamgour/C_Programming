*Why do you wirte program?
    To automate things, so that you dont have to do that work.

*Loop: to repeast a certain task again and again.n programming, we frequently need to perform an action, of again and again, 
        with variations in the details each time. The mechanism, which meets this need, is the 'loop,' 


    Following are three types of loop in C programming.

                                                        *For loop
                                                        *While loop
                                                        *do-while loop



**There are two kinds of loops:
                    
                    *Entry Controlled loops: In entry controlled loops, the test condition is evaluated before entering the loop body. 
                    The For Loop and While Loop are an example of entry controlled loops.

                    *Exit Controlled Loops: In exit controlled loops, the test condition is tested at the end of the loop. 
                    The loop body will execute at least once, whether the test condition is true or false. The do-while loop is an
                     example of an exit controlled loop.

**For Loop:
            A for loop is a repetition control structure that allows us to efficiently write a loop that will execute a specific number of times. 
            
            The for loop working is as follows:
                    1. The initialization statement is executed only once; 
                    in this statement, we initialize a variable to some value.

                    2. In the second step, the test expression is evaluated. 
                    Suppose the test expression is evaluated to true. 
                    In that case, the for loop keeps running, and the test expression is re-evaluated, 
                    but if the test expression is evaluated to false,then the for loop terminates.
        
        The loop keeps executing until the test expression is false. When the test expression is false, then the loop terminates.

            *The "For" Loop is used to repeat a specific code until a specific condition is satisfied.  
            The for-loop statement is very specialized. We use for a loop when we know the number of iterations we want,
            whereas when we do not know about the number of iterations, we use while loop. 

            Syntax:
                        * initialize counter: It will initialize the loop counter value, i.e., i=0.
                        * test counter: It verifies whether the condition is true.
                        * Increment/decrement counter: Incrementing or decrementing the counter.
                        * Set of statements: Execute the set of statements.

**While Loop: 
            While loop is called a pre-tested loop. The while loop allows code to be executed multiple times, 
            depending upon a boolean condition that is given as a test expression. 
            While studying for loop, we have seen that the number of iterations is known, whereas while loops are used in situations where we do not know the exact number 
            of iterations of the loop. The while loop execution is terminated on the basis of the Boolean (true or false) test condition.


            Following are some properties of while loop.

                                * A conditional expression written in the brackets of while is used to check the condition. 
                                    The Set of statements defined inside the while loop will execute until the given condition returns false.
                                * The condition will return 0 if it is true. The condition will be false if it returns any nonzero number.
                                * In the while loop, we cannot execute the loop until we do not specify the condition expression.
                                * It is possible to execute a while loop without any statements. This will give no error. 
                                * We can have multiple conditional expressions in a while loop.
                                * Braces are optional if the loop body contains only one statement.

**do-while loop:
            In do-while loops, the execution is terminated on the basis of the test condition. The main difference between the do-while loop and while loop is that, 
            in the do-while loop,the condition is tested at the end of the loop body, 
            whereas the other two loops are entry controlled loops.


*How does the do-while loop work?
                First, the body of the do-while loop is executed once. Only then, the test condition is evaluated.
                If the test condition returns true, the set of instructions inside the body of the loop is executed again, and the test condition is evaluated.
                This looping process goes on until the test condition becomes false.
                If the test condition returns false, then the loop terminates.

*Note: In do-while loop, the loop body will execute at least once irrespective of the test condition.*


*What about an Infinite Loop?
            An infinite loop also known as an endless loop occurs when a condition always evaluates to true. 
            Usually, this is considered an error.

            Sometimes, while executing a loop, it becomes necessary to jump out of the loop. 
            For this, we will use the break statement or continue statement.

*break statement
            When a break statement is encountered inside a loop whether it is a for loop or a while loop, 
            the loop is terminated and the program continues with the statement immediately following the loop.


            * Break statement is used to break the loop or switch case statements execution and brings the control to the next block of code after loop or switch case.
            * Break statements are used to bring the program control out of the loop.
            * The break statement is used inside loops or switch statement in C Language.

*continue statement
            Using a continue statement in the loop will cause the control to go directly to the test-condition and then it will continue the loop process.

            * The continue statement is used inside loops in C Language. When a continue statement is encountered inside the loop, control jumps to the beginning 
            of the loop for next iteration, skipping the execution of statements inside the body of loop after continue statement.
            * It is used to bring the control to the next iteration of the loop.
            * The continue statement skips some code inside the loop and continues with the next iteration.
            * It is mainly used for a condition so that we can skip some lines of code for a particular condition.
            * It forces next iteration in loop i.e. as break terminates the loop but continue forces the next iteration of the loop.